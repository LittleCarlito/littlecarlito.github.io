name: 'Auto Generate Changesets'
description: 'Automatically detects package changes and generates changesets without manual intervention'

inputs:
  github-token:
    description: 'GitHub token for authentication'
    required: true
  repository:
    description: 'Repository name (owner/repo)'
    required: false
    default: ${{ github.repository }}
  base-commit:
    description: 'Base commit to detect changes from (default: auto-detect)'
    required: false
    default: ''
  auto-changeset-prefix:
    description: 'Prefix for auto-generated changeset files'
    required: false
    default: 'auto-'
  default-version:
    description: 'Default version bump type if not determined from commits'
    required: false
    default: 'patch'
  create-pr:
    description: 'Create a PR with the changesets'
    required: false
    default: 'true'
  pr-title:
    description: 'Title for the PR'
    required: false
    default: 'chore: add auto-generated changesets'
  auto-merge:
    description: 'Auto-merge the PR if checks pass'
    required: false
    default: 'true'

outputs:
  changesets-created:
    description: 'Whether any changesets were created'
    value: ${{ steps.generate-changesets.outputs.changeset_created }}
  packages-changed:
    description: 'Number of packages with changes detected'
    value: ${{ steps.generate-changesets.outputs.packages_changed }}
  changesets-count:
    description: 'Number of changesets created'
    value: ${{ steps.generate-changesets.outputs.changesets_created }}
  pr-number:
    description: 'PR number if one was created'
    value: ${{ steps.create-pr.outputs.pr-number }}
  branch-name:
    description: 'Branch name created for changesets'
    value: ${{ steps.create-branch.outputs.branch_name }}

runs:
  using: "composite"
  steps:
    # Setup git
    - name: Setup git
      shell: bash
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
    # Create branch for changesets
    - name: Create branch for changesets
      id: create-branch
      shell: bash
      run: |
        # Create a timestamped branch name
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        BRANCH_NAME="auto-changesets-${TIMESTAMP}"
        
        echo "Creating branch: $BRANCH_NAME" >&2
        git checkout -b "$BRANCH_NAME"
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        
    # Generate changesets
    - name: Generate changesets
      id: generate-changesets
      shell: bash
      run: |
        set -e
        # Add timeout safety
        timeout_seconds=300
        
        # Run with timeout
        echo "Running generate-package-changesets.sh with $timeout_seconds second timeout..." >&2
        
        # Create temp file for output capture
        temp_output=$(mktemp)
        
        # Run the script with timeout and capture stdout to variables
        timeout $timeout_seconds bash .github/scripts/version/generate-package-changesets.sh \
          --base-commit "${{ inputs.base-commit }}" \
          --auto-changeset-prefix "${{ inputs.auto-changeset-prefix }}" \
          --default-version "${{ inputs.default-version }}" \
          --dry-run "false" > $temp_output 2>&1 || {
            exit_code=$?
            if [ $exit_code -eq 124 ]; then
              echo "ERROR: Script timed out after $timeout_seconds seconds!" >&2
            else
              echo "ERROR: Script failed with exit code $exit_code" >&2
            fi
            cat $temp_output >&2
            rm -f $temp_output
            exit $exit_code
          }
        
        echo "DEBUG: Script output:" >&2
        cat $temp_output >&2
        
        # Extract output variables with defaults to prevent errors
        packages_changed=$(grep "^packages_changed=" $temp_output | cut -d= -f2 || echo "0")
        changesets_created=$(grep "^changesets_created=" $temp_output | cut -d= -f2 || echo "0") 
        changeset_created=$(grep "^changeset_created=" $temp_output | cut -d= -f2 || echo "false")
        
        # Set outputs for GitHub Actions
        echo "packages_changed=${packages_changed}" >> $GITHUB_OUTPUT
        echo "changesets_created=${changesets_created}" >> $GITHUB_OUTPUT
        echo "changeset_created=${changeset_created}" >> $GITHUB_OUTPUT
        
        # Display details for logging
        echo "Packages changed: ${packages_changed}" >&2
        echo "Changesets created: ${changesets_created}" >&2
        
        # Clean up temp file
        rm -f $temp_output
        
    # Commit changesets if any were created
    - name: Commit changesets
      id: commit-changesets
      if: steps.generate-changesets.outputs.changeset_created == 'true'
      shell: bash
      run: |
        set -e  # Exit immediately if a command fails
        
        echo "Committing changesets to branch ${{ steps.create-branch.outputs.branch_name }}..."
        
        # Check if there are actually files to commit
        if [ -z "$(find .changeset -name "*.md" | grep -v "README.md" | grep -v "config.json")" ]; then
          echo "No changeset files found to commit!"
          echo "commit_success=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Add timeout to git operations
        timeout 60 git add .changeset/*.md || { echo "Error adding files, timed out"; exit 1; }
        timeout 60 git commit -m "chore: add auto-generated changesets [skip ci]" || { echo "Error committing files, timed out"; exit 1; }
        timeout 90 git push origin ${{ steps.create-branch.outputs.branch_name }} || { echo "Error pushing branch, timed out"; exit 1; }
        
        echo "Successfully committed and pushed changesets"
        echo "commit_success=true" >> $GITHUB_OUTPUT
        
    # Create PR if changesets were committed and create-pr is true
    - name: Create PR
      id: create-pr
      if: steps.generate-changesets.outputs.changeset_created == 'true' && steps.commit-changesets.outputs.commit_success == 'true' && inputs.create-pr == 'true'
      uses: ./.github/actions/manage-pull-request
      with:
        github-token: ${{ inputs.github-token }}
        repository: ${{ inputs.repository }}
        base-branch: 'main'
        head-branch: ${{ steps.create-branch.outputs.branch_name }}
        title: ${{ inputs.pr-title }}
        body: |
          This PR contains auto-generated changesets for the following packages:
          
          Changes were detected in ${{ steps.generate-changesets.outputs.packages_changed }} packages.
          ${{ steps.generate-changesets.outputs.changesets_created }} changesets were created.
          
          This PR was created automatically by the CI system.
          
    # Cleanup if no changesets were created
    - name: Cleanup if no changesets
      if: steps.generate-changesets.outputs.changeset_created != 'true'
      shell: bash
      run: |
        set -e
        echo "No changesets created, cleaning up branch..."
        timeout 30 git checkout main || { echo "Failed to checkout main, continuing"; }
        timeout 30 git branch -D ${{ steps.create-branch.outputs.branch_name }} || { echo "Failed to delete branch, continuing"; }
        echo "Cleanup complete" 