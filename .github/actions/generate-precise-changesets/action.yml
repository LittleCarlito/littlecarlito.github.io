name: Generate Precise Changesets
description: Generates precise package-specific changesets based on actual changes since last release

inputs:
  github-token:
    description: 'GitHub token for authentication'
    required: true
  repository:
    description: 'Repository name (owner/repo)'
    required: false
    default: ${{ github.repository }}
  auto-changeset-prefix:
    description: 'Prefix for auto-generated changeset files'
    required: false
    default: 'auto-'
  force-generate:
    description: 'Force generation of changesets even if no changes detected'
    required: false
    default: 'false'
  node-version:
    description: 'Node.js version to use'
    required: false
    default: 'lts/*'
  pnpm-version:
    description: 'PNPM version to use'
    required: false
    default: '8.15.4'

outputs:
  changes-made:
    description: 'Whether any changesets were created'
    value: ${{ steps.generate-changesets.outputs.changes_made }}

runs:
  using: "composite"
  steps:
    # Setup environment using our script
    - name: Setup environment
      id: setup
      shell: bash
      run: |
        # Run the setup script and filter only properly formatted output lines for GITHUB_OUTPUT
        bash .github/scripts/maintenance/setup-environment.sh \
          --github-token "${{ inputs.github-token }}" \
          --node-version "${{ inputs.node-version }}" \
          --pnpm-version "${{ inputs.pnpm-version }}" 2>&1 | grep -E "^[a-zA-Z0-9_-]+=.+" >> $GITHUB_OUTPUT || true
    
    # Generate precise changesets using our new script
    - name: Generate precise package changesets
      id: generate-changesets
      shell: bash
      run: |
        echo "Generating precise changesets for packages with actual changes..."
        bash .github/scripts/version/generate-package-changesets.sh \
          --auto-changeset-prefix "${{ inputs.auto-changeset-prefix }}" \
          --force-generate "${{ inputs.force-generate }}"
    
    # Validate changesets if any were created
    - name: Validate changesets
      id: validate-changesets
      shell: bash
      if: steps.generate-changesets.outputs.changes_made == 'true'
      run: |
        bash .github/scripts/version/validate-changesets.sh
    
    # Print summary of what was done
    - name: Summarize changes
      shell: bash
      run: |
        CHANGESET_COUNT=$(find .changeset -name "*.md" ! -name "README.md" ! -name "config.json" | wc -l)
        echo "====== CHANGESET SUMMARY ======"
        echo "Changesets created/found: $CHANGESET_COUNT"
        if [ "$CHANGESET_COUNT" -gt "0" ]; then
          echo "Changeset details:"
          find .changeset -name "*.md" ! -name "README.md" ! -name "config.json" | xargs cat
        else
          echo "No changesets were created or found."
        fi
        echo "====== END SUMMARY ======" 