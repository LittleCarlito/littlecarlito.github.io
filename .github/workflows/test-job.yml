name: Test Job

on:
  workflow_call:
    outputs:
      test_success:
        description: "Whether the tests passed"
        value: ${{ jobs.test.outputs.success }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.run_tests.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '8.15.4'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: package-builds
          path: ./

      - name: Run lint check
        run: pnpm lint
      
      - name: Prepare for tests
        run: |
          # Check that prepare-tests.cjs exists
          if [ ! -f "tests/config/prepare-tests.cjs" ]; then
            echo "❌ Error: prepare-tests.cjs script not found!"
            exit 1
          fi
          
          # Make the script executable 
          chmod +x tests/config/prepare-tests.cjs
          
          # Verify blorkpack build again before tests
          if [ ! -d "packages/blorkpack/dist" ] || [ ! -f "packages/blorkpack/dist/index.js" ]; then
            echo "❌ Error: blorkpack package is not built correctly. Rebuilding..."
            pnpm --filter "@littlecarlito/blorkpack" build
            
            # Check again after rebuild
            if [ ! -d "packages/blorkpack/dist" ] || [ ! -f "packages/blorkpack/dist/index.js" ]; then
              echo "❌ Fatal: blorkpack build failed after retry."
              exit 1
            fi
          fi
          
          # Run the script to prepare the test environment
          echo "Running test preparation script..."
          node tests/config/prepare-tests.cjs
      
      - name: Run tests with coverage
        id: run_tests
        run: |
          pnpm test:coverage
          echo "success=true" >> $GITHUB_OUTPUT
        continue-on-error: false
      
      - name: Prepare artifacts
        if: always() && (success() || failure())
        run: pnpm prepare-artifacts
      
      - name: Upload test reports
        if: always() && (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: pipeline-artifacts/test-reports
          retention-days: 7
      
      - name: Upload coverage reports
        if: always() && (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: pipeline-artifacts/coverage
          retention-days: 7 