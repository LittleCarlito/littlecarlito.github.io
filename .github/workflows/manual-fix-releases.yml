name: Manual Fix Releases

on:
  workflow_dispatch:
    inputs:
      fix-version:
        description: 'Fix version in package.json'
        required: true
        type: string
      fix-changelog:
        description: 'Fix changelog entries'
        required: true
        type: boolean
      fix-git-tag:
        description: 'Fix git tag'
        required: true
        type: boolean
      fix-npm-release:
        description: 'Fix npm release'
        required: true
        type: boolean
      packages:
        description: 'Comma-separated list of packages to fix'
        required: true
        type: string
      commit-message:
        description: 'Custom commit message'
        required: false
        type: string
        default: 'fix: manual release fixes'

jobs:
  fix-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Fix versions
        if: inputs.fix-version != ''
        run: |
          IFS=',' read -ra PKGS <<< "${{ inputs.packages }}"
          for PKG in "${PKGS[@]}"; do
            echo "Fixing version for $PKG to ${{ inputs.fix-version }}"
            npm pkg set version="${{ inputs.fix-version }}" --workspace=$PKG
          done

      - name: Fix changelog
        if: inputs.fix-changelog == true
        run: |
          IFS=',' read -ra PKGS <<< "${{ inputs.packages }}"
          for PKG in "${PKGS[@]}"; do
            echo "Fixing changelog for $PKG"
            # Add your changelog fix logic here
          done

      - name: Fix git tag
        if: inputs.fix-git-tag == true
        run: |
          IFS=',' read -ra PKGS <<< "${{ inputs.packages }}"
          for PKG in "${PKGS[@]}"; do
            PKG_NAME=$(basename $PKG)
            TAG="v${{ inputs.fix-version }}"
            echo "Creating git tag $TAG for $PKG_NAME"
            git tag -a $TAG -m "Release $PKG_NAME $TAG"
          done
          git push --tags

      - name: Fix npm release
        if: inputs.fix-npm-release == true
        run: |
          IFS=',' read -ra PKGS <<< "${{ inputs.packages }}"
          for PKG in "${PKGS[@]}"; do
            echo "Publishing $PKG to npm"
            npm publish --workspace=$PKG --access public
          done

      - name: Commit changes
        if: inputs.fix-version != '' || inputs.fix-changelog == true
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git commit -m "${{ inputs.commit-message }}"
          git push 