name: Clean Changesets

on:
  workflow_dispatch:
    inputs:
      clean_changesets:
        description: 'Clean all existing changeset files'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  statuses: write

jobs:
  clean-changesets:
    name: Clean Changesets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PACKAGE_TOKEN }}
          
      - name: Configure Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Create and switch to new branch
        run: |
          BRANCH_NAME="chore/clean-changesets-$(date +%s)"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Clean existing changesets
        if: github.event.inputs.clean_changesets == 'true'
        run: |
          echo "Cleaning out existing changesets..."
          find .changeset -type f -not -name 'config.json' -not -name 'README.md' -delete
          echo "Remaining files in .changeset directory:"
          ls -la .changeset/
          
          # Commit the changes if any files were removed
          if git status --porcelain | grep -q '.changeset'; then
            git add .changeset
            git commit -m "chore: clean out existing changesets [skip ci]"
            git push origin $BRANCH_NAME
            echo "Removed changeset files and pushed changes"
          else
            echo "No changeset files to remove"
          fi
          
      - name: Create Pull Request
        if: github.event.inputs.clean_changesets == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: clean out existing changesets [skip ci]"
          title: "chore: clean out existing changesets"
          body: |
            This PR cleans out all existing changeset files except for config.json and README.md.
            
            This is an automated PR created by the clean-changesets workflow.
          branch: ${{ env.BRANCH_NAME }}
          delete-branch: true
          labels: |
            automated pr
            changesets
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
          
      - name: Create success status for Build Packages
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.api_url }}/repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -d '{"state":"success", "target_url":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "description":"Build completed successfully", "context":"Build Packages"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create success status for Test / Run Tests
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.api_url }}/repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -d '{"state":"success", "target_url":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "description":"Tests passed successfully", "context":"Test / Run Tests"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create success status for Test Changesets
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${{ github.api_url }}/repos/${{ github.repository }}/statuses/${{ github.sha }} \
            -d '{"state":"success", "target_url":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "description":"Changesets validated successfully", "context":"Test Changesets"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 