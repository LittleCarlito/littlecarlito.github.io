name: Unpublish Package Version

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package name (e.g., blorktools or @littlecarlito/blorktools)'
        required: true
        type: string
      version:
        description: 'Version to unpublish (e.g., 1.13.0)'
        required: true
        type: string
      unpublish-tag:
        description: 'Also delete corresponding git tag'
        required: false
        type: boolean
        default: true
      dry-run:
        description: 'Dry run (show what would happen without doing it)'
        required: false
        type: boolean
        default: false

jobs:
  unpublish:
    name: Unpublish Package Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.VERSION_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@littlecarlito'
      
      # Setup explicit npm authentication
      - name: Configure NPM Auth
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.VERSION_TOKEN }}" > ~/.npmrc
          echo "@littlecarlito:registry=https://npm.pkg.github.com" >> ~/.npmrc
          cat ~/.npmrc
      
      # Try direct npm unpublish first
      - name: Direct NPM Unpublish
        id: direct_unpublish
        continue-on-error: true
        run: |
          echo "Attempting direct npm unpublish..."
          
          PACKAGE="${{ github.event.inputs.package }}"
          VERSION="${{ github.event.inputs.version }}"
          
          # Normalize package name if needed
          if [[ ! "$PACKAGE" == @littlecarlito* ]]; then
            PACKAGE="@littlecarlito/$PACKAGE"
            echo "Normalized package name to $PACKAGE"
          fi
          
          if [[ "${{ github.event.inputs.dry-run }}" == "true" ]]; then
            echo "[DRY RUN] Would unpublish $PACKAGE@$VERSION"
            echo "unpublished=false" >> $GITHUB_OUTPUT
          else
            npm unpublish --force "$PACKAGE@$VERSION" || {
              echo "Direct unpublish failed, will try alternative method"
              echo "unpublished=false" >> $GITHUB_OUTPUT
              exit 1
            }
            echo "Successfully unpublished $PACKAGE@$VERSION"
            echo "unpublished=true" >> $GITHUB_OUTPUT
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VERSION_TOKEN }}
          
      # Try the action as fallback
      - name: Unpublish package using action
        if: steps.direct_unpublish.outputs.unpublished != 'true'
        id: unpublish
        uses: ./.github/actions/unpublish-package
        with:
          github-token: ${{ secrets.VERSION_TOKEN }}
          package: ${{ github.event.inputs.package }}
          version: ${{ github.event.inputs.version }}
          unpublish-tag: ${{ github.event.inputs.unpublish-tag }}
          dry-run: ${{ github.event.inputs.dry-run }}
          
      # Delete tag if requested and direct unpublish succeeded
      - name: Delete Git tag (after direct unpublish)
        if: steps.direct_unpublish.outputs.unpublished == 'true' && github.event.inputs.unpublish-tag == 'true' && github.event.inputs.dry-run != 'true'
        run: |
          PACKAGE="${{ github.event.inputs.package }}"
          VERSION="${{ github.event.inputs.version }}"
          
          # Normalize package name if needed
          if [[ ! "$PACKAGE" == @littlecarlito* ]]; then
            PACKAGE="@littlecarlito/$PACKAGE"
          fi
          
          # Try both tag formats
          TAG_NAME="${PACKAGE}@${VERSION}"
          CLEAN_PKG_NAME=$(echo "$PACKAGE" | sed 's/@//g' | sed 's/\//-/g')
          ALT_TAG_NAME="${CLEAN_PKG_NAME}@${VERSION}"
          
          echo "Checking for tag: $TAG_NAME"
          git tag -d "$TAG_NAME" 2>/dev/null || echo "Tag $TAG_NAME doesn't exist locally"
          git push --delete origin "$TAG_NAME" 2>/dev/null || echo "Tag $TAG_NAME doesn't exist on remote"
          
          echo "Checking for alternative tag: $ALT_TAG_NAME"
          git tag -d "$ALT_TAG_NAME" 2>/dev/null || echo "Tag $ALT_TAG_NAME doesn't exist locally"
          git push --delete origin "$ALT_TAG_NAME" 2>/dev/null || echo "Tag $ALT_TAG_NAME doesn't exist on remote"
      
      - name: Report results
        if: always()
        run: |
          if [[ "${{ steps.direct_unpublish.outputs.unpublished }}" == "true" || "${{ steps.unpublish.outputs.unpublished }}" == "true" ]]; then
            echo "✅ Successfully unpublished ${{ github.event.inputs.package }}@${{ github.event.inputs.version }}"
            if [[ "${{ github.event.inputs.unpublish-tag }}" == "true" ]]; then
              echo "✅ Also deleted corresponding Git tag(s)"
            fi
          elif [[ "${{ github.event.inputs.dry-run }}" == "true" ]]; then
            echo "🔍 Dry run completed for ${{ github.event.inputs.package }}@${{ github.event.inputs.version }}"
            echo "No actual changes were made."
          else 
            echo "❌ Failed to unpublish ${{ github.event.inputs.package }}@${{ github.event.inputs.version }}"
            echo "Check the logs for more details."
          fi
      
      # Report failure using the new action    
      - name: Report failure
        if: failure()
        uses: ./.github/actions/report-workflow-results
        with:
          workflow-name: 'Manual Unpublish Package'
          result: 'failure'
          branch: ${{ github.ref_name }}
          summary: 'Failed to unpublish ${{ github.event.inputs.package }}@${{ github.event.inputs.version }}'
          source: 'dispatch'
          discord-webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          github-token: ${{ secrets.VERSION_TOKEN }} 