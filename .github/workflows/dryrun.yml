name: Pull Request Verification

on:
  pull_request:
    branches:
      - main
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build-lint-test:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '8.15.4'
      
      - name: Install dependencies
        run: pnpm install
      
      # Build packages first
      - name: Build packages
        run: |
          echo "🏗️ Building workspace packages..."
          pnpm --filter "@littlecarlito/blorkpack" build
          pnpm --filter "@littlecarlito/blorktools" build
          pnpm --filter "@littlecarlito/portfolio" build
      
      # Then run linting
      - name: Lint check
        run: pnpm lint
      
      # Finally run tests
      - name: Run tests with coverage
        run: pnpm test:coverage
      
      - name: Prepare artifacts
        if: always() && (success() || failure())
        run: pnpm prepare-artifacts
      
      - name: Upload test reports
        if: always() && (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: pipeline-artifacts/test-reports
          retention-days: 7
      
      - name: Upload coverage reports
        if: always() && (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: pipeline-artifacts/coverage
          retention-days: 7

  test-semantic-release:
    name: Test Semantic Release
    needs: build-lint-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@littlecarlito'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/npm

      - name: Test Releases
        run: |
          for pkg in blorkpack blorktools; do
            echo "Testing semantic-release for $pkg..."
            cd "packages/$pkg"
            echo '{
              "branches": ["main"],
              "plugins": [
                ["@semantic-release/commit-analyzer", {
                  "preset": "angular",
                  "releaseRules": [
                    {"type": "feat", "release": "minor"},
                    {"type": "fix", "release": "patch"},
                    {"type": "perf", "release": "patch"},
                    {"scope": "no-release", "release": false},
                    {"type": "docs", "release": "patch"},
                    {"type": "style", "release": "patch"},
                    {"type": "refactor", "release": "patch"},
                    {"type": "test", "release": "patch"},
                    {"type": "chore", "release": "patch"},
                    {"type": "build", "release": "patch"}
                  ]
                }],
                "@semantic-release/release-notes-generator",
                "@semantic-release/changelog",
                ["@semantic-release/npm", {
                  "npmPublish": false
                }],
                ["@semantic-release/git", {
                  "assets": ["package.json", "CHANGELOG.md"],
                  "message": "chore(release): ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}"
                }],
                "@semantic-release/github"
              ]
            }' > .releaserc.json
            pnpm semantic-release --dry-run || echo "Completed dry-run for $pkg"
            cd ../..
          done
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }} 