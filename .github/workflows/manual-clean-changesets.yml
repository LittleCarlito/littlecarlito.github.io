name: Manual Clean Changesets

on:
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  clean:
    name: Manual Clean Changesets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      statuses: write
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PACKAGE_TOKEN }}
      
      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          node-version: '20.x'
          pnpm-version: '8.15.4'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@littlecarlito'

      # Create a clean branch with all changesets removed
      - name: Create clean branch
        id: create_branch
        run: |
          # Use a unique branch name with timestamp to avoid conflicts
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BRANCH_NAME="chore/clean-changesets-$TIMESTAMP"
          echo "Using branch name: $BRANCH_NAME"
          
          # Create and switch to the new branch
          git checkout -b $BRANCH_NAME
          
          # Check if there are any changeset files to clean
          CHANGESET_FILES=$(find .changeset -name "*.md" ! -name "README.md" | wc -l)
          
          if [ "$CHANGESET_FILES" -eq "0" ]; then
            echo "No changeset files to clean. Creating empty commit."
            rm -rf .changeset/*.md
            # Create README.md if it doesn't exist
            [ ! -f .changeset/README.md ] && echo "# Changesets\n\nThis directory contains changeset files generated by the changeset tool." > .changeset/README.md
            git add .changeset/
            git commit -m "chore: clean out existing changesets [skip ci]" --allow-empty
          else
            echo "Cleaning $CHANGESET_FILES changeset file(s)."
            rm -rf .changeset/*.md
            # Create README.md if it doesn't exist
            [ ! -f .changeset/README.md ] && echo "# Changesets\n\nThis directory contains changeset files generated by the changeset tool." > .changeset/README.md
            git add .changeset/
            git commit -m "chore: clean out existing changesets [skip ci]"
          fi
          
          # Push the new branch
          git push origin $BRANCH_NAME
          
          # Store branch name for use in later steps
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
      
      # Create and manage PR
      - name: Create pull request
        id: create_pr
        uses: ./.github/actions/pr-management
        with:
          github-token: ${{ secrets.PACKAGE_TOKEN }}
          repository: ${{ github.repository }}
          base-branch: 'main'
          head-branch: ${{ steps.create_branch.outputs.branch_name }}
          title: 'chore: clean out existing changesets'
          body: 'This PR cleans out existing changesets to start fresh.'
      
      # Add status checks to PR with workflow-aware check handling
      - name: Add status checks
        uses: ./.github/actions/force-status-checks
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          sha: ${{ steps.create_pr.outputs.commit-sha }}
          contexts: '["Build Packages", "Test / Run Tests", "Test Changesets"]'
          descriptions: '["Build completed successfully (via manual-clean-changesets)", "Tests passed successfully (via manual-clean-changesets)", "Changesets validated successfully (via manual-clean-changesets)"]'
      
      # Wait for checks to complete before merging
      - name: Wait for checks to complete
        uses: ./.github/actions/status-checks
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          sha: ${{ steps.create_pr.outputs.commit-sha }}
          wait-for-checks: 'true'
          timeout: '300'
          workflow-name: 'Manual Clean Changesets'
          min-checks: '3'
      
      # Merge the PR
      - name: Merge pull request
        uses: ./.github/actions/pr-management
        with:
          github-token: ${{ secrets.PACKAGE_TOKEN }}
          repository: ${{ github.repository }}
          pr-number: ${{ steps.create_pr.outputs.pr-number }}
          merge-method: 'merge'
          delete-branch: 'false' 